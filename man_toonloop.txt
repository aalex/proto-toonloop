[DESCRIPTION]
The Toonloop Live Stop Motion Tool. 

Toonloop is a live stop motion animation software. It aims at showing the creation process the the audience as well as the result of the creation. The frame by frame animation is made by adding frames one by one to a clip made of many frames. Clips are displayed in a never ending loop. 

Toonloop is a great tool for teaching new medias to children. It can also be used as a professionnal software for movie creators, though it is mainly intended to be used in a live kiosk of show. In the left window, you can see what is seen by the live camera. In the right window, it is the result of the stop motion loop.

Toonloop provides features such as onion skinning, and an intervalometer, which allows one to automatically create accelerated time lapse clips. It can be controlled using MIDI input, the Open Sound Control protocol or the FUDI protocol. (with Pure Data) Toonloop offers video effects written in the OpenGL Shading Language, (GLSL) to do chroma keying, luma keying, image adjustements and more. Different themes allows one to choose how the editing and playback viewports are displayed. The configuration can be saved and restored in the JSON format. Finally, Toonloop allows users to save their clips to the photo-JPEG video codec (using mencoder), and as well to JPEG images. 

The default config file is ~/.toonloop.json, where tilde (~) is your home directory. 

[SYNOPSIS]
toonloop [options]

[EXAMPLES]
You can launch Toonloop with a whole bunch of options. Options are set
using the -o flag :

toonloop -o toonloop_home ~/Public/toonloop -o project_name hello -o intervalometer_enabled False -o bgimage_glob_enabled True -o image_flip_horizontal True -o fudi_enabled True -w 320 -v

To control Toonloop with a Pure Data patch, launch it with options such as the following : 

toonloop -o fudi_enabled 1

Next, you can find an example Pure Data patch in toon/data/toonloop.fx.pd where "toon" is the toon Python module. Toonloop includes two Python packages : rats and toon. 

Note that if Toonloop crashes at startup, you should verify that your camera /dev/video0 is really a V4L2 camera, and that it is present. You can use tools such as ivtv-utils, gst-launch or xawtv for that kind of work under GNU/Linux.

[INTERACTIVE USAGE]

Toonloop is an interactive software. While it runs, or can control it using keyboard keys. Here is a list of keystrokes to control Toonloop.

Toonloop interactive keyboard controls :
 - Press the SPACE bar to grab a frame.
 - Press DELETE or BACKSPACE to delete the last frame.
 - Press 'r' to reset and start the current sequence. 
   (and remove all its frames)
 - Press 's' to save the current sequence as a Motion-JPEG movie.
 - Press 'i' to print current loop frame number, number of frames in loop 
   and global framerate. It toggles on/off a head-up display of text.
 - Press 'h' to print a help message.
 - Press UP to increase frame rate.
 - Press DOWN to decrease frame rate.
 - Press 'a' to toggle on/off the auto recording.
   (it records one frame on every frame) It is an intervalometer.
   Best used to create timelapse clips automatically.
 - Press 'k' or 'j' to increase or decrease the auto recording rate.
 - Press 'f' or ESCAPE to toggle fullscreen mode.
 - Press CONTROL-'q' to quit.
 - Press '.' to change the graphical theme.
 - Press TAB to change the playback direction.
 - Press a number from 0 to 9 to switch to a different clip number.
 - Press 'p' to pause playback.
 - Press 'o' to toggle the onion skinning on/off.
 - Press 'b' to take a snapshot as the new background image.
 - Press 'n' to select the next effect available.

[OSC INTERFACE]

Toonloop sends the following OSC messages :

  /toon/framerate <i>
  /toon/writehead <i>
  /toon/playhead <i>
  /toon/clip/index <i>
  /sampler/play/start <i>
  /sampler/play/stop <i>
  /sampler/record/start <i>
  /sampler/record/stop <i>

Toonloop listens for the following OSC messages :

  /toon/frame/add
  /toon/frame/remove
  /toon/playhead <i>
  /toon/osc/subscribe <s> <i>
  /toon/clip/select <i>
  /toon/clip/save

[MIDI INTERFACE]

Toonloop can be controlled using a MIDI keyboard. It is best used with a sustain pedal. Control #64 seems to be consistantly mapped to the sustain pedal and is set up to add a frame to the current clip. This can be changed using the keyword configuration options which start with "midi".

[KEYWORD CONFIGURATION OPTIONS] 

The --option command line option allows one to specify specific keyword identified by a keyword. Their type can be integer, float, string of boolean. Boolean options can be given using integer of python-style boolean string. A true value can be specified as True, or 1. A false value is set as 0 or False.

Once Toonloop has been started by some keyword config options, those options can be saved to the ~/.toonloop.json configuration file. Next time Toonloop is launched, those configuration options will be read from that file. If Toonloop behaves strangely, you should try deleting that file. 

Here is a list of some of the options with their default values:
  -o autosave_on False
  -o autosave_rate_seconds 600.0
  -o config_file ~/.toonloop.json
  -o delete_jpeg False
  -o display_height 480
  -o display_width 640
  -o fudi_enabled False
  -o fudi_receive_port 15555
  -o fudi_send_host localhost
  -o fudi_send_port 17777
  -o image_flip_horizontal False
  -o image_height 240
  -o image_width 320
  -o intervalometer_on False
  -o intervalometer_rate_seconds 30.0
  -o midi_enabled False
  -o midi_input_id -1
  -o midi_note_play 62
  -o midi_note_record 60
  -o midi_pedal_control_id 64
  -o onionskin_on False
  -o osc_enabled False
  -o osc_listen_port 7772
  -o osc_send_host localhost
  -o osc_send_port 7770
  -o project_name new_project
  -o toonloop_home ~/Documents/toonloop
  -o verbose False
  -o video_device 0

[AUTHOR]
Alexandre Quessy. Thanks to Tristan Matthews and Society for Arts and Technology for their help. 

Toonloop is an original idea of Alexandre Quessy, and is his research project for his master at UQAM. It is much similar in scope to the live animation work of Pierre Hebert. Toonloop is released under the GNU GPL. 

[REPORTING BUGS]
http://www.toonloop.com

[COPYRIGHT]
Copyright 2008 Alexandre Quessy & Tristan Matthews
<alexandre@quessy.net> & <le.businessman@gmail.com>

Toonloop is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Toonloop is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the gnu general public license
along with Toonloop.  If not, see <http://www.gnu.org/licenses/>.
